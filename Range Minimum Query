Here, We are given two index and we have to find minimum between these two index.

#include <bits/stdc++.h>
using namespace std;

void build(vector<int>& t, vector<int>& a, int v, int tl , int tr){
	if(tl == tr)	t[v] = a[tl];
	else{
		int tm = (tl + tr)/2;
		build(t, a, 2*v, tl, tm);
		build(t, a, 2*v + 1, tm + 1, tr);
		t[v] = min(t[2*v] , t[2*v + 1]);
	}
}

int getmin(vector<int>& t, int v , int tl ,int tr, int l , int r){
	if(l <= tl && tr <= r) return t[v];
	// The segment is inside. 
	if(l > tr || r < tl)	return 1e9 + 7;
	// The segment is outside. 
	int tm = (tl + tr)/2;

	int lt = getmin(t, 2*v, tl ,tm , l, r) ;
	int rt = getmin(t, 2*v + 1, tm+1, tr, l , r);
	return min(lt, rt);
}


int main() {
	//code
	ios::sync_with_stdio(0);

    cin.tie(0);
    cout.tie(0);
	int n,q;
	cin>>n;
	vector<int> t(4*n), a(n);
	for(int i= 0;i < n; i++){
		cin>>a[i];
	}
	build(t, a, 1, 0 , n-1);
	cin>>q;
	while(q--){
		int l, r;
		cin>>l>>r;
		cout<<getmin(t, 1 , 0 , n-1, l, r)<<"\n";
	}
	return 0;
}
