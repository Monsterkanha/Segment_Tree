Ashu and Shanu are best buddies. One day Shanu gives Ashu a problem to test his intelligence.He gives him an array of N natural numbers and asks him to solve the following queries:-

Query 0:- modify the element present at index i to x.
Query 1:- count the number of even numbers in range l to r inclusive.
Query 2:- count the number of odd numbers in range l to r inclusive.

#include <bits/stdc++.h>
using namespace std;

void build(vector<int>& t, vector<int>& a, int v, int tl , int tr){
	if(tl == tr)	t[v] = (a[tl]%2 == 0);
	else{
		int tm = (tl + tr)/2;
		build(t, a, 2*v, tl, tm);
		build(t, a, 2*v + 1, tm + 1, tr);
		t[v] = t[2*v] + t[2*v + 1];
	}
}

int getEven(vector<int>& t, int v , int tl ,int tr, int l , int r){
	if(l <= tl && tr <= r) return t[v];
	// The segment is inside. 
	if(l > tr || r < tl)	return 0;
	// The segment is outside. 
	int tm = (tl + tr)/2;

	int lt = getEven(t, 2*v, tl ,tm , l, r) ;
	int rt = getEven(t, 2*v + 1, tm+1, tr, l , r);
	return lt + rt;
}

void update(vector<int>& t, vector<int>& a, int v, int tl ,int tr, int pos){
	if(tl == tr){
		t[v] = (a[tl]%2 == 0);
		return;
	}
	int tm = (tl + tr)/2;
	if(pos <= tm)	update(t,a, 2*v, tl ,tm, pos);
	else update(t,a, 2*v + 1, tm + 1, tr, pos);

	t[v] = t[2*v] + t[2*v + 1];
}


int main() {
	//code
	ios::sync_with_stdio(0);

    cin.tie(0);
    cout.tie(0);
	int n,q;
	cin>>n;
	vector<int> t(4*n), a(n);
	for(int i= 0;i < n; i++){
		cin>>a[i];
	}
	build(t, a, 1, 0 , n-1);
	cin>>q;
	while(q--){
		int type, l ,r;
		cin>>type>>l>>r;
		l-- , r--;
		if(type == 0){
			a[l] = r+1;
			update(t, a, 1, 0, n-1, l);
		}
		else if(type == 1){
			cout<<getEven(t, 1, 0, n-1, l , r)<<"\n";
		}
		else{
			cout<<(r- l + 1) - getEven(t, 1,0, n-1, l , r)<<"\n";
		}
	}
	return 0;
}
